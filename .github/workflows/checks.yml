name: Run checks

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  GIT_LFS_SKIP_SMUDGE: 1

jobs:
  clippy-fmt:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        nightly_version: [nightly-2022-05-20]
        make:
          - name: Clippy
            command: clippy
            cache_subkey: clippy
            cache_version: v1
          - name: Format
            command: check && make fmt-check
            cache_subkey: fmt
            cache_version: v1

    env:
      CARGO_INCREMENTAL: 0

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup rust toolchain
        uses: oxidecomputer/actions-rs_toolchain@ad3f86084a8a5acf2c09cb691421b31cf8af7a36
        with:
          target: wasm32-unknown-unknown
          profile: default
          override: true
      - name: Setup rust nightly
        uses: oxidecomputer/actions-rs_toolchain@ad3f86084a8a5acf2c09cb691421b31cf8af7a36
        with:
          toolchain: ${{ matrix.nightly_version }}
          target: wasm32-unknown-unknown
          profile: default
      - name: Show rust toolchain info
        run: rustup show
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ./target
            ./wasm/tx_template/target
            ./wasm/vp_template/target
            ./wasm_for_tests/wasm_source/target
          key: ${{ runner.os }}-${{ matrix.make.cache_subkey }}-${{ matrix.make.cache_version }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.make.cache_subkey }}-${{ matrix.make.cache_version }}-cargo-
      - name: ${{ matrix.make.name }}
        run: make ${{ matrix.make.command }}
      - name: Clean cache folder
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean cargo-cache || true
          cargo-cache
